//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Metadatos de relaciones en EDM

[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Apartamento_Edificio", "Edificio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Edificio), "Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Apartamento), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Fotos_Apartamento_Apartamento", "Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Apartamento), "Fotos_Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Fotos_Apartamento), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Infraestructura_Apartamento_Apartamento", "Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Apartamento), "Infraestructura_Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Apartamento), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Servcio_Apartamento_Apartamento", "Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Apartamento), "Servcio_Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Servcio_Apartamento), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Edificio_Detalle_Edificio", "Edificio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Edificio), "Edificio_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Edificio_Detalle), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Edificio_Ubicacion_Detalle", "Ubicacion_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Ubicacion_Detalle), "Edificio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Edificio), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Fotos_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Detalle), "Fotos_Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Fotos_Apartamento), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Infraestructura_Detalle_Infraestructura", "Infraestructura", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura), "Infraestructura_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Detalle), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Detalle), "Infraestructura_Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Apartamento), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Detalle), "Infraestructura_Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Casa), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Servcio_Apartamento_Servicios", "Servicios", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Servicios), "Servcio_Apartamento", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Servcio_Apartamento), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Servicio_Casa_Servicios", "Servicios", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Servicios), "Servicio_Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Servicio_Casa), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Ubicacion_Detalle_Ubicacion", "Ubicacion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Ubicacion), "Ubicacion_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Ubicacion_Detalle), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Foto_Edificio_Edificio", "Edificio", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Edificio), "Foto_Edificio", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Foto_Edificio), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Foto_Casa_Ubicacion_Detalle", "Ubicacion_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Ubicacion_Detalle), "Foto_Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Foto_Casa), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Casa_Ubicacion_Detalle", "Ubicacion_Detalle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Ubicacion_Detalle), "Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Casa), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Foto_Casa_Casa", "Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Casa), "Foto_Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Foto_Casa), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Infraestructura_Casa_Casa", "Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Casa), "Infraestructura_Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Infraestructura_Casa), true)]
[assembly: EdmRelationshipAttribute("INMOBILIARIAModel", "FK_Servicio_Casa_Casa", "Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Casa), "Servicio_Casa", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Inmobiliaria.Service.ServiceInmobiliaria.Servicio_Casa), true)]

#endregion

namespace Inmobiliaria.Service.ServiceInmobiliaria
{
    #region Contextos
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    public partial class INMOBILIARIAEntitiesV1 : ObjectContext
    {
        #region Constructores
    
        /// <summary>
        /// Inicializa un nuevo objeto INMOBILIARIAEntitiesV1 usando la cadena de conexión encontrada en la sección 'INMOBILIARIAEntitiesV1' del archivo de configuración de la aplicación.
        /// </summary>
        public INMOBILIARIAEntitiesV1() : base("name=INMOBILIARIAEntitiesV1", "INMOBILIARIAEntitiesV1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto INMOBILIARIAEntitiesV1.
        /// </summary>
        public INMOBILIARIAEntitiesV1(string connectionString) : base(connectionString, "INMOBILIARIAEntitiesV1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Inicializar un nuevo objeto INMOBILIARIAEntitiesV1.
        /// </summary>
        public INMOBILIARIAEntitiesV1(EntityConnection connection) : base(connection, "INMOBILIARIAEntitiesV1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Métodos parciales
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Propiedades de ObjectSet
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Apartamento> Apartamento
        {
            get
            {
                if ((_Apartamento == null))
                {
                    _Apartamento = base.CreateObjectSet<Apartamento>("Apartamento");
                }
                return _Apartamento;
            }
        }
        private ObjectSet<Apartamento> _Apartamento;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Edificio> Edificio
        {
            get
            {
                if ((_Edificio == null))
                {
                    _Edificio = base.CreateObjectSet<Edificio>("Edificio");
                }
                return _Edificio;
            }
        }
        private ObjectSet<Edificio> _Edificio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Edificio_Detalle> Edificio_Detalle
        {
            get
            {
                if ((_Edificio_Detalle == null))
                {
                    _Edificio_Detalle = base.CreateObjectSet<Edificio_Detalle>("Edificio_Detalle");
                }
                return _Edificio_Detalle;
            }
        }
        private ObjectSet<Edificio_Detalle> _Edificio_Detalle;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Fotos_Apartamento> Fotos_Apartamento
        {
            get
            {
                if ((_Fotos_Apartamento == null))
                {
                    _Fotos_Apartamento = base.CreateObjectSet<Fotos_Apartamento>("Fotos_Apartamento");
                }
                return _Fotos_Apartamento;
            }
        }
        private ObjectSet<Fotos_Apartamento> _Fotos_Apartamento;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Infraestructura> Infraestructura
        {
            get
            {
                if ((_Infraestructura == null))
                {
                    _Infraestructura = base.CreateObjectSet<Infraestructura>("Infraestructura");
                }
                return _Infraestructura;
            }
        }
        private ObjectSet<Infraestructura> _Infraestructura;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Infraestructura_Apartamento> Infraestructura_Apartamento
        {
            get
            {
                if ((_Infraestructura_Apartamento == null))
                {
                    _Infraestructura_Apartamento = base.CreateObjectSet<Infraestructura_Apartamento>("Infraestructura_Apartamento");
                }
                return _Infraestructura_Apartamento;
            }
        }
        private ObjectSet<Infraestructura_Apartamento> _Infraestructura_Apartamento;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Infraestructura_Casa> Infraestructura_Casa
        {
            get
            {
                if ((_Infraestructura_Casa == null))
                {
                    _Infraestructura_Casa = base.CreateObjectSet<Infraestructura_Casa>("Infraestructura_Casa");
                }
                return _Infraestructura_Casa;
            }
        }
        private ObjectSet<Infraestructura_Casa> _Infraestructura_Casa;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Infraestructura_Detalle> Infraestructura_Detalle
        {
            get
            {
                if ((_Infraestructura_Detalle == null))
                {
                    _Infraestructura_Detalle = base.CreateObjectSet<Infraestructura_Detalle>("Infraestructura_Detalle");
                }
                return _Infraestructura_Detalle;
            }
        }
        private ObjectSet<Infraestructura_Detalle> _Infraestructura_Detalle;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Servcio_Apartamento> Servcio_Apartamento
        {
            get
            {
                if ((_Servcio_Apartamento == null))
                {
                    _Servcio_Apartamento = base.CreateObjectSet<Servcio_Apartamento>("Servcio_Apartamento");
                }
                return _Servcio_Apartamento;
            }
        }
        private ObjectSet<Servcio_Apartamento> _Servcio_Apartamento;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Servicio_Casa> Servicio_Casa
        {
            get
            {
                if ((_Servicio_Casa == null))
                {
                    _Servicio_Casa = base.CreateObjectSet<Servicio_Casa>("Servicio_Casa");
                }
                return _Servicio_Casa;
            }
        }
        private ObjectSet<Servicio_Casa> _Servicio_Casa;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Servicios> Servicios
        {
            get
            {
                if ((_Servicios == null))
                {
                    _Servicios = base.CreateObjectSet<Servicios>("Servicios");
                }
                return _Servicios;
            }
        }
        private ObjectSet<Servicios> _Servicios;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Ubicacion> Ubicacion
        {
            get
            {
                if ((_Ubicacion == null))
                {
                    _Ubicacion = base.CreateObjectSet<Ubicacion>("Ubicacion");
                }
                return _Ubicacion;
            }
        }
        private ObjectSet<Ubicacion> _Ubicacion;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Ubicacion_Detalle> Ubicacion_Detalle
        {
            get
            {
                if ((_Ubicacion_Detalle == null))
                {
                    _Ubicacion_Detalle = base.CreateObjectSet<Ubicacion_Detalle>("Ubicacion_Detalle");
                }
                return _Ubicacion_Detalle;
            }
        }
        private ObjectSet<Ubicacion_Detalle> _Ubicacion_Detalle;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<VistaDetailEdificio> VistaDetailEdificio
        {
            get
            {
                if ((_VistaDetailEdificio == null))
                {
                    _VistaDetailEdificio = base.CreateObjectSet<VistaDetailEdificio>("VistaDetailEdificio");
                }
                return _VistaDetailEdificio;
            }
        }
        private ObjectSet<VistaDetailEdificio> _VistaDetailEdificio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Foto_Casa> Foto_Casa
        {
            get
            {
                if ((_Foto_Casa == null))
                {
                    _Foto_Casa = base.CreateObjectSet<Foto_Casa>("Foto_Casa");
                }
                return _Foto_Casa;
            }
        }
        private ObjectSet<Foto_Casa> _Foto_Casa;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Foto_Edificio> Foto_Edificio
        {
            get
            {
                if ((_Foto_Edificio == null))
                {
                    _Foto_Edificio = base.CreateObjectSet<Foto_Edificio>("Foto_Edificio");
                }
                return _Foto_Edificio;
            }
        }
        private ObjectSet<Foto_Edificio> _Foto_Edificio;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Tipo_Casa> Tipo_Casa
        {
            get
            {
                if ((_Tipo_Casa == null))
                {
                    _Tipo_Casa = base.CreateObjectSet<Tipo_Casa>("Tipo_Casa");
                }
                return _Tipo_Casa;
            }
        }
        private ObjectSet<Tipo_Casa> _Tipo_Casa;
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        public ObjectSet<Casa> Casa
        {
            get
            {
                if ((_Casa == null))
                {
                    _Casa = base.CreateObjectSet<Casa>("Casa");
                }
                return _Casa;
            }
        }
        private ObjectSet<Casa> _Casa;

        #endregion

        #region Métodos AddTo
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Apartamento. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToApartamento(Apartamento apartamento)
        {
            base.AddObject("Apartamento", apartamento);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Edificio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToEdificio(Edificio edificio)
        {
            base.AddObject("Edificio", edificio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Edificio_Detalle. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToEdificio_Detalle(Edificio_Detalle edificio_Detalle)
        {
            base.AddObject("Edificio_Detalle", edificio_Detalle);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Fotos_Apartamento. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToFotos_Apartamento(Fotos_Apartamento fotos_Apartamento)
        {
            base.AddObject("Fotos_Apartamento", fotos_Apartamento);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Infraestructura. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInfraestructura(Infraestructura infraestructura)
        {
            base.AddObject("Infraestructura", infraestructura);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Infraestructura_Apartamento. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInfraestructura_Apartamento(Infraestructura_Apartamento infraestructura_Apartamento)
        {
            base.AddObject("Infraestructura_Apartamento", infraestructura_Apartamento);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Infraestructura_Casa. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInfraestructura_Casa(Infraestructura_Casa infraestructura_Casa)
        {
            base.AddObject("Infraestructura_Casa", infraestructura_Casa);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Infraestructura_Detalle. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToInfraestructura_Detalle(Infraestructura_Detalle infraestructura_Detalle)
        {
            base.AddObject("Infraestructura_Detalle", infraestructura_Detalle);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Servcio_Apartamento. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToServcio_Apartamento(Servcio_Apartamento servcio_Apartamento)
        {
            base.AddObject("Servcio_Apartamento", servcio_Apartamento);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Servicio_Casa. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToServicio_Casa(Servicio_Casa servicio_Casa)
        {
            base.AddObject("Servicio_Casa", servicio_Casa);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Servicios. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToServicios(Servicios servicios)
        {
            base.AddObject("Servicios", servicios);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet sysdiagrams. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Ubicacion. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUbicacion(Ubicacion ubicacion)
        {
            base.AddObject("Ubicacion", ubicacion);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Ubicacion_Detalle. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToUbicacion_Detalle(Ubicacion_Detalle ubicacion_Detalle)
        {
            base.AddObject("Ubicacion_Detalle", ubicacion_Detalle);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet VistaDetailEdificio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToVistaDetailEdificio(VistaDetailEdificio vistaDetailEdificio)
        {
            base.AddObject("VistaDetailEdificio", vistaDetailEdificio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Foto_Casa. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToFoto_Casa(Foto_Casa foto_Casa)
        {
            base.AddObject("Foto_Casa", foto_Casa);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Foto_Edificio. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToFoto_Edificio(Foto_Edificio foto_Edificio)
        {
            base.AddObject("Foto_Edificio", foto_Edificio);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Tipo_Casa. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToTipo_Casa(Tipo_Casa tipo_Casa)
        {
            base.AddObject("Tipo_Casa", tipo_Casa);
        }
    
        /// <summary>
        /// Método desusado para agregar un nuevo objeto al EntitySet Casa. Considere la posibilidad de usar el método .Add de la propiedad ObjectSet&lt;T&gt; asociada.
        /// </summary>
        public void AddToCasa(Casa casa)
        {
            base.AddObject("Casa", casa);
        }

        #endregion

        #region Importaciones de funciones
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id_Edificio">No hay documentación de metadatos disponible.</param>
        /// <param name="n_Piso">No hay documentación de metadatos disponible.</param>
        /// <param name="n_Puerta">No hay documentación de metadatos disponible.</param>
        /// <param name="bloque">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertApartamento(global::System.String id_Edificio, Nullable<global::System.Int32> n_Piso, Nullable<global::System.Int32> n_Puerta, global::System.String bloque)
        {
            ObjectParameter id_EdificioParameter;
            if (id_Edificio != null)
            {
                id_EdificioParameter = new ObjectParameter("Id_Edificio", id_Edificio);
            }
            else
            {
                id_EdificioParameter = new ObjectParameter("Id_Edificio", typeof(global::System.String));
            }
    
            ObjectParameter n_PisoParameter;
            if (n_Piso.HasValue)
            {
                n_PisoParameter = new ObjectParameter("N_Piso", n_Piso);
            }
            else
            {
                n_PisoParameter = new ObjectParameter("N_Piso", typeof(global::System.Int32));
            }
    
            ObjectParameter n_PuertaParameter;
            if (n_Puerta.HasValue)
            {
                n_PuertaParameter = new ObjectParameter("N_Puerta", n_Puerta);
            }
            else
            {
                n_PuertaParameter = new ObjectParameter("N_Puerta", typeof(global::System.Int32));
            }
    
            ObjectParameter bloqueParameter;
            if (bloque != null)
            {
                bloqueParameter = new ObjectParameter("Bloque", bloque);
            }
            else
            {
                bloqueParameter = new ObjectParameter("Bloque", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertApartamento", id_EdificioParameter, n_PisoParameter, n_PuertaParameter, bloqueParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id_Ubicacion">No hay documentación de metadatos disponible.</param>
        /// <param name="nombre">No hay documentación de metadatos disponible.</param>
        /// <param name="a_Construccion">No hay documentación de metadatos disponible.</param>
        /// <param name="n_Plantas">No hay documentación de metadatos disponible.</param>
        /// <param name="inf_Adicional">No hay documentación de metadatos disponible.</param>
        /// <param name="mainFoto">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertEdificio(global::System.String id_Ubicacion, global::System.String nombre, Nullable<global::System.DateTime> a_Construccion, Nullable<global::System.Int32> n_Plantas, global::System.String inf_Adicional, global::System.String mainFoto)
        {
            ObjectParameter id_UbicacionParameter;
            if (id_Ubicacion != null)
            {
                id_UbicacionParameter = new ObjectParameter("Id_Ubicacion", id_Ubicacion);
            }
            else
            {
                id_UbicacionParameter = new ObjectParameter("Id_Ubicacion", typeof(global::System.String));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter a_ConstruccionParameter;
            if (a_Construccion.HasValue)
            {
                a_ConstruccionParameter = new ObjectParameter("A_Construccion", a_Construccion);
            }
            else
            {
                a_ConstruccionParameter = new ObjectParameter("A_Construccion", typeof(global::System.DateTime));
            }
    
            ObjectParameter n_PlantasParameter;
            if (n_Plantas.HasValue)
            {
                n_PlantasParameter = new ObjectParameter("N_Plantas", n_Plantas);
            }
            else
            {
                n_PlantasParameter = new ObjectParameter("N_Plantas", typeof(global::System.Int32));
            }
    
            ObjectParameter inf_AdicionalParameter;
            if (inf_Adicional != null)
            {
                inf_AdicionalParameter = new ObjectParameter("Inf_Adicional", inf_Adicional);
            }
            else
            {
                inf_AdicionalParameter = new ObjectParameter("Inf_Adicional", typeof(global::System.String));
            }
    
            ObjectParameter mainFotoParameter;
            if (mainFoto != null)
            {
                mainFotoParameter = new ObjectParameter("mainFoto", mainFoto);
            }
            else
            {
                mainFotoParameter = new ObjectParameter("mainFoto", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertEdificio", id_UbicacionParameter, nombreParameter, a_ConstruccionParameter, n_PlantasParameter, inf_AdicionalParameter, mainFotoParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="foto">No hay documentación de metadatos disponible.</param>
        /// <param name="id_Infra_detalle">No hay documentación de metadatos disponible.</param>
        /// <param name="id_Apartamento">No hay documentación de metadatos disponible.</param>
        /// <param name="descripcion">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertFotosApartamento(global::System.String foto, global::System.String id_Infra_detalle, global::System.String id_Apartamento, global::System.String descripcion)
        {
            ObjectParameter fotoParameter;
            if (foto != null)
            {
                fotoParameter = new ObjectParameter("Foto", foto);
            }
            else
            {
                fotoParameter = new ObjectParameter("Foto", typeof(global::System.String));
            }
    
            ObjectParameter id_Infra_detalleParameter;
            if (id_Infra_detalle != null)
            {
                id_Infra_detalleParameter = new ObjectParameter("Id_Infra_detalle", id_Infra_detalle);
            }
            else
            {
                id_Infra_detalleParameter = new ObjectParameter("Id_Infra_detalle", typeof(global::System.String));
            }
    
            ObjectParameter id_ApartamentoParameter;
            if (id_Apartamento != null)
            {
                id_ApartamentoParameter = new ObjectParameter("Id_Apartamento", id_Apartamento);
            }
            else
            {
                id_ApartamentoParameter = new ObjectParameter("Id_Apartamento", typeof(global::System.String));
            }
    
            ObjectParameter descripcionParameter;
            if (descripcion != null)
            {
                descripcionParameter = new ObjectParameter("Descripcion", descripcion);
            }
            else
            {
                descripcionParameter = new ObjectParameter("Descripcion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertFotosApartamento", fotoParameter, id_Infra_detalleParameter, id_ApartamentoParameter, descripcionParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id_Apartamento">No hay documentación de metadatos disponible.</param>
        /// <param name="id_Servicio">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertServicioApartamento(global::System.String id_Apartamento, global::System.String id_Servicio)
        {
            ObjectParameter id_ApartamentoParameter;
            if (id_Apartamento != null)
            {
                id_ApartamentoParameter = new ObjectParameter("Id_Apartamento", id_Apartamento);
            }
            else
            {
                id_ApartamentoParameter = new ObjectParameter("Id_Apartamento", typeof(global::System.String));
            }
    
            ObjectParameter id_ServicioParameter;
            if (id_Servicio != null)
            {
                id_ServicioParameter = new ObjectParameter("Id_Servicio", id_Servicio);
            }
            else
            {
                id_ServicioParameter = new ObjectParameter("Id_Servicio", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertServicioApartamento", id_ApartamentoParameter, id_ServicioParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id_Apart">No hay documentación de metadatos disponible.</param>
        /// <param name="id_Infra_Apart">No hay documentación de metadatos disponible.</param>
        /// <param name="cantidad">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertInfra_Apartamento(global::System.String id_Apart, global::System.String id_Infra_Apart, Nullable<global::System.Int32> cantidad)
        {
            ObjectParameter id_ApartParameter;
            if (id_Apart != null)
            {
                id_ApartParameter = new ObjectParameter("Id_Apart", id_Apart);
            }
            else
            {
                id_ApartParameter = new ObjectParameter("Id_Apart", typeof(global::System.String));
            }
    
            ObjectParameter id_Infra_ApartParameter;
            if (id_Infra_Apart != null)
            {
                id_Infra_ApartParameter = new ObjectParameter("Id_Infra_Apart", id_Infra_Apart);
            }
            else
            {
                id_Infra_ApartParameter = new ObjectParameter("Id_Infra_Apart", typeof(global::System.String));
            }
    
            ObjectParameter cantidadParameter;
            if (cantidad.HasValue)
            {
                cantidadParameter = new ObjectParameter("Cantidad", cantidad);
            }
            else
            {
                cantidadParameter = new ObjectParameter("Cantidad", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertInfra_Apartamento", id_ApartParameter, id_Infra_ApartParameter, cantidadParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id_Infrastructura">No hay documentación de metadatos disponible.</param>
        /// <param name="tamano">No hay documentación de metadatos disponible.</param>
        /// <param name="descripcion">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertInfraDetalle(global::System.String id_Infrastructura, global::System.String tamano, global::System.String descripcion)
        {
            ObjectParameter id_InfrastructuraParameter;
            if (id_Infrastructura != null)
            {
                id_InfrastructuraParameter = new ObjectParameter("Id_Infrastructura", id_Infrastructura);
            }
            else
            {
                id_InfrastructuraParameter = new ObjectParameter("Id_Infrastructura", typeof(global::System.String));
            }
    
            ObjectParameter tamanoParameter;
            if (tamano != null)
            {
                tamanoParameter = new ObjectParameter("Tamano", tamano);
            }
            else
            {
                tamanoParameter = new ObjectParameter("Tamano", typeof(global::System.String));
            }
    
            ObjectParameter descripcionParameter;
            if (descripcion != null)
            {
                descripcionParameter = new ObjectParameter("Descripcion", descripcion);
            }
            else
            {
                descripcionParameter = new ObjectParameter("Descripcion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertInfraDetalle", id_InfrastructuraParameter, tamanoParameter, descripcionParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="nombre">No hay documentación de metadatos disponible.</param>
        /// <param name="tipo">No hay documentación de metadatos disponible.</param>
        /// <param name="descripcion">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertServicio(global::System.String nombre, global::System.String tipo, global::System.String descripcion)
        {
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter tipoParameter;
            if (tipo != null)
            {
                tipoParameter = new ObjectParameter("Tipo", tipo);
            }
            else
            {
                tipoParameter = new ObjectParameter("Tipo", typeof(global::System.String));
            }
    
            ObjectParameter descripcionParameter;
            if (descripcion != null)
            {
                descripcionParameter = new ObjectParameter("Descripcion", descripcion);
            }
            else
            {
                descripcionParameter = new ObjectParameter("Descripcion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertServicio", nombreParameter, tipoParameter, descripcionParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id">No hay documentación de metadatos disponible.</param>
        /// <param name="id_Ubicacion">No hay documentación de metadatos disponible.</param>
        /// <param name="nombre">No hay documentación de metadatos disponible.</param>
        /// <param name="a_Construccion">No hay documentación de metadatos disponible.</param>
        /// <param name="n_Plantas">No hay documentación de metadatos disponible.</param>
        /// <param name="inf_Adicional">No hay documentación de metadatos disponible.</param>
        /// <param name="mainFoto">No hay documentación de metadatos disponible.</param>
        public ObjectResult<Nullable<global::System.Int32>> msp_ModificarEdificio(global::System.String id, global::System.String id_Ubicacion, global::System.String nombre, Nullable<global::System.DateTime> a_Construccion, Nullable<global::System.Int32> n_Plantas, global::System.String inf_Adicional, global::System.String mainFoto)
        {
            ObjectParameter idParameter;
            if (id != null)
            {
                idParameter = new ObjectParameter("Id", id);
            }
            else
            {
                idParameter = new ObjectParameter("Id", typeof(global::System.String));
            }
    
            ObjectParameter id_UbicacionParameter;
            if (id_Ubicacion != null)
            {
                id_UbicacionParameter = new ObjectParameter("Id_Ubicacion", id_Ubicacion);
            }
            else
            {
                id_UbicacionParameter = new ObjectParameter("Id_Ubicacion", typeof(global::System.String));
            }
    
            ObjectParameter nombreParameter;
            if (nombre != null)
            {
                nombreParameter = new ObjectParameter("Nombre", nombre);
            }
            else
            {
                nombreParameter = new ObjectParameter("Nombre", typeof(global::System.String));
            }
    
            ObjectParameter a_ConstruccionParameter;
            if (a_Construccion.HasValue)
            {
                a_ConstruccionParameter = new ObjectParameter("A_Construccion", a_Construccion);
            }
            else
            {
                a_ConstruccionParameter = new ObjectParameter("A_Construccion", typeof(global::System.DateTime));
            }
    
            ObjectParameter n_PlantasParameter;
            if (n_Plantas.HasValue)
            {
                n_PlantasParameter = new ObjectParameter("N_Plantas", n_Plantas);
            }
            else
            {
                n_PlantasParameter = new ObjectParameter("N_Plantas", typeof(global::System.Int32));
            }
    
            ObjectParameter inf_AdicionalParameter;
            if (inf_Adicional != null)
            {
                inf_AdicionalParameter = new ObjectParameter("Inf_Adicional", inf_Adicional);
            }
            else
            {
                inf_AdicionalParameter = new ObjectParameter("Inf_Adicional", typeof(global::System.String));
            }
    
            ObjectParameter mainFotoParameter;
            if (mainFoto != null)
            {
                mainFotoParameter = new ObjectParameter("mainFoto", mainFoto);
            }
            else
            {
                mainFotoParameter = new ObjectParameter("mainFoto", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("msp_ModificarEdificio", idParameter, id_UbicacionParameter, nombreParameter, a_ConstruccionParameter, n_PlantasParameter, inf_AdicionalParameter, mainFotoParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id_Edificio">No hay documentación de metadatos disponible.</param>
        public ObjectResult<Nullable<global::System.Int32>> sp_EliminarEdificio(global::System.String id_Edificio)
        {
            ObjectParameter id_EdificioParameter;
            if (id_Edificio != null)
            {
                id_EdificioParameter = new ObjectParameter("Id_Edificio", id_Edificio);
            }
            else
            {
                id_EdificioParameter = new ObjectParameter("Id_Edificio", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("sp_EliminarEdificio", id_EdificioParameter);
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        /// <param name="id_Edificio">No hay documentación de metadatos disponible.</param>
        /// <param name="foto">No hay documentación de metadatos disponible.</param>
        /// <param name="descripcion">No hay documentación de metadatos disponible.</param>
        public ObjectResult<global::System.String> InsertFotoEdificio(global::System.String id_Edificio, global::System.String foto, global::System.String descripcion)
        {
            ObjectParameter id_EdificioParameter;
            if (id_Edificio != null)
            {
                id_EdificioParameter = new ObjectParameter("Id_Edificio", id_Edificio);
            }
            else
            {
                id_EdificioParameter = new ObjectParameter("Id_Edificio", typeof(global::System.String));
            }
    
            ObjectParameter fotoParameter;
            if (foto != null)
            {
                fotoParameter = new ObjectParameter("Foto", foto);
            }
            else
            {
                fotoParameter = new ObjectParameter("Foto", typeof(global::System.String));
            }
    
            ObjectParameter descripcionParameter;
            if (descripcion != null)
            {
                descripcionParameter = new ObjectParameter("Descripcion", descripcion);
            }
            else
            {
                descripcionParameter = new ObjectParameter("Descripcion", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<global::System.String>("InsertFotoEdificio", id_EdificioParameter, fotoParameter, descripcionParameter);
        }

        #endregion

    }

    #endregion

    #region Entidades
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Apartamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Apartamento : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Apartamento.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Edificio">Valor inicial de la propiedad Id_Edificio.</param>
        /// <param name="n_Piso">Valor inicial de la propiedad N_Piso.</param>
        /// <param name="n_Puerta">Valor inicial de la propiedad N_Puerta.</param>
        public static Apartamento CreateApartamento(global::System.String id, global::System.String id_Edificio, global::System.Int32 n_Piso, global::System.Int32 n_Puerta)
        {
            Apartamento apartamento = new Apartamento();
            apartamento.Id = id;
            apartamento.Id_Edificio = id_Edificio;
            apartamento.N_Piso = n_Piso;
            apartamento.N_Puerta = n_Puerta;
            return apartamento;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Edificio
        {
            get
            {
                return _Id_Edificio;
            }
            set
            {
                OnId_EdificioChanging(value);
                ReportPropertyChanging("Id_Edificio");
                _Id_Edificio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Edificio");
                OnId_EdificioChanged();
            }
        }
        private global::System.String _Id_Edificio;
        partial void OnId_EdificioChanging(global::System.String value);
        partial void OnId_EdificioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 N_Piso
        {
            get
            {
                return _N_Piso;
            }
            set
            {
                OnN_PisoChanging(value);
                ReportPropertyChanging("N_Piso");
                _N_Piso = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("N_Piso");
                OnN_PisoChanged();
            }
        }
        private global::System.Int32 _N_Piso;
        partial void OnN_PisoChanging(global::System.Int32 value);
        partial void OnN_PisoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 N_Puerta
        {
            get
            {
                return _N_Puerta;
            }
            set
            {
                OnN_PuertaChanging(value);
                ReportPropertyChanging("N_Puerta");
                _N_Puerta = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("N_Puerta");
                OnN_PuertaChanged();
            }
        }
        private global::System.Int32 _N_Puerta;
        partial void OnN_PuertaChanging(global::System.Int32 value);
        partial void OnN_PuertaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Bloque
        {
            get
            {
                return _Bloque;
            }
            set
            {
                OnBloqueChanging(value);
                ReportPropertyChanging("Bloque");
                _Bloque = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Bloque");
                OnBloqueChanged();
            }
        }
        private global::System.String _Bloque;
        partial void OnBloqueChanging(global::System.String value);
        partial void OnBloqueChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Apartamento_Edificio", "Edificio")]
        public Edificio Edificio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Apartamento_Edificio", "Edificio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Apartamento_Edificio", "Edificio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Edificio> EdificioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Apartamento_Edificio", "Edificio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Edificio>("INMOBILIARIAModel.FK_Apartamento_Edificio", "Edificio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Fotos_Apartamento_Apartamento", "Fotos_Apartamento")]
        public EntityCollection<Fotos_Apartamento> Fotos_Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fotos_Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Apartamento", "Fotos_Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fotos_Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Apartamento", "Fotos_Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Apartamento_Apartamento", "Infraestructura_Apartamento")]
        public EntityCollection<Infraestructura_Apartamento> Infraestructura_Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Infraestructura_Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Apartamento", "Infraestructura_Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Infraestructura_Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Apartamento", "Infraestructura_Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servcio_Apartamento_Apartamento", "Servcio_Apartamento")]
        public EntityCollection<Servcio_Apartamento> Servcio_Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servcio_Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Apartamento", "Servcio_Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servcio_Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Apartamento", "Servcio_Apartamento", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Casa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Casa : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Casa.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_TipoCasa">Valor inicial de la propiedad Id_TipoCasa.</param>
        /// <param name="mts2">Valor inicial de la propiedad Mts2.</param>
        /// <param name="id_Ubi_Detalle">Valor inicial de la propiedad Id_Ubi_Detalle.</param>
        public static Casa CreateCasa(global::System.String id, global::System.String id_TipoCasa, global::System.String mts2, global::System.String id_Ubi_Detalle)
        {
            Casa casa = new Casa();
            casa.Id = id;
            casa.Id_TipoCasa = id_TipoCasa;
            casa.Mts2 = mts2;
            casa.Id_Ubi_Detalle = id_Ubi_Detalle;
            return casa;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_TipoCasa
        {
            get
            {
                return _Id_TipoCasa;
            }
            set
            {
                OnId_TipoCasaChanging(value);
                ReportPropertyChanging("Id_TipoCasa");
                _Id_TipoCasa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_TipoCasa");
                OnId_TipoCasaChanged();
            }
        }
        private global::System.String _Id_TipoCasa;
        partial void OnId_TipoCasaChanging(global::System.String value);
        partial void OnId_TipoCasaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mts2
        {
            get
            {
                return _Mts2;
            }
            set
            {
                OnMts2Changing(value);
                ReportPropertyChanging("Mts2");
                _Mts2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mts2");
                OnMts2Changed();
            }
        }
        private global::System.String _Mts2;
        partial void OnMts2Changing(global::System.String value);
        partial void OnMts2Changed();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Ubi_Detalle
        {
            get
            {
                return _Id_Ubi_Detalle;
            }
            set
            {
                OnId_Ubi_DetalleChanging(value);
                ReportPropertyChanging("Id_Ubi_Detalle");
                _Id_Ubi_Detalle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Ubi_Detalle");
                OnId_Ubi_DetalleChanged();
            }
        }
        private global::System.String _Id_Ubi_Detalle;
        partial void OnId_Ubi_DetalleChanging(global::System.String value);
        partial void OnId_Ubi_DetalleChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Casa_Ubicacion_Detalle", "Ubicacion_Detalle")]
        public Ubicacion_Detalle Ubicacion_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Casa_Ubicacion_Detalle", "Ubicacion_Detalle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Casa_Ubicacion_Detalle", "Ubicacion_Detalle").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ubicacion_Detalle> Ubicacion_DetalleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Casa_Ubicacion_Detalle", "Ubicacion_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Casa_Ubicacion_Detalle", "Ubicacion_Detalle", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Foto_Casa_Casa", "Foto_Casa")]
        public EntityCollection<Foto_Casa> Foto_Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Foto_Casa>("INMOBILIARIAModel.FK_Foto_Casa_Casa", "Foto_Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Foto_Casa>("INMOBILIARIAModel.FK_Foto_Casa_Casa", "Foto_Casa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Casa_Casa", "Infraestructura_Casa")]
        public EntityCollection<Infraestructura_Casa> Infraestructura_Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Infraestructura_Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Casa", "Infraestructura_Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Infraestructura_Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Casa", "Infraestructura_Casa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servicio_Casa_Casa", "Servicio_Casa")]
        public EntityCollection<Servicio_Casa> Servicio_Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servicio_Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Casa", "Servicio_Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servicio_Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Casa", "Servicio_Casa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Edificio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Edificio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Edificio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Ubi_Detalle">Valor inicial de la propiedad Id_Ubi_Detalle.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="a_Contruccion">Valor inicial de la propiedad A_Contruccion.</param>
        public static Edificio CreateEdificio(global::System.String id, global::System.String id_Ubi_Detalle, global::System.String nombre, global::System.DateTime a_Contruccion)
        {
            Edificio edificio = new Edificio();
            edificio.Id = id;
            edificio.Id_Ubi_Detalle = id_Ubi_Detalle;
            edificio.Nombre = nombre;
            edificio.A_Contruccion = a_Contruccion;
            return edificio;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Ubi_Detalle
        {
            get
            {
                return _Id_Ubi_Detalle;
            }
            set
            {
                OnId_Ubi_DetalleChanging(value);
                ReportPropertyChanging("Id_Ubi_Detalle");
                _Id_Ubi_Detalle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Ubi_Detalle");
                OnId_Ubi_DetalleChanged();
            }
        }
        private global::System.String _Id_Ubi_Detalle;
        partial void OnId_Ubi_DetalleChanging(global::System.String value);
        partial void OnId_Ubi_DetalleChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime A_Contruccion
        {
            get
            {
                return _A_Contruccion;
            }
            set
            {
                OnA_ContruccionChanging(value);
                ReportPropertyChanging("A_Contruccion");
                _A_Contruccion = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("A_Contruccion");
                OnA_ContruccionChanged();
            }
        }
        private global::System.DateTime _A_Contruccion;
        partial void OnA_ContruccionChanging(global::System.DateTime value);
        partial void OnA_ContruccionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> N_Plantas
        {
            get
            {
                return _N_Plantas;
            }
            set
            {
                OnN_PlantasChanging(value);
                ReportPropertyChanging("N_Plantas");
                _N_Plantas = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("N_Plantas");
                OnN_PlantasChanged();
            }
        }
        private Nullable<global::System.Int32> _N_Plantas;
        partial void OnN_PlantasChanging(Nullable<global::System.Int32> value);
        partial void OnN_PlantasChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inf_Adicional
        {
            get
            {
                return _Inf_Adicional;
            }
            set
            {
                OnInf_AdicionalChanging(value);
                ReportPropertyChanging("Inf_Adicional");
                _Inf_Adicional = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inf_Adicional");
                OnInf_AdicionalChanged();
            }
        }
        private global::System.String _Inf_Adicional;
        partial void OnInf_AdicionalChanging(global::System.String value);
        partial void OnInf_AdicionalChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mainfoto
        {
            get
            {
                return _mainfoto;
            }
            set
            {
                OnmainfotoChanging(value);
                ReportPropertyChanging("mainfoto");
                _mainfoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mainfoto");
                OnmainfotoChanged();
            }
        }
        private global::System.String _mainfoto;
        partial void OnmainfotoChanging(global::System.String value);
        partial void OnmainfotoChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Apartamento_Edificio", "Apartamento")]
        public EntityCollection<Apartamento> Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Apartamento>("INMOBILIARIAModel.FK_Apartamento_Edificio", "Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Apartamento>("INMOBILIARIAModel.FK_Apartamento_Edificio", "Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Edificio_Detalle_Edificio", "Edificio_Detalle")]
        public EntityCollection<Edificio_Detalle> Edificio_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Edificio_Detalle>("INMOBILIARIAModel.FK_Edificio_Detalle_Edificio", "Edificio_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Edificio_Detalle>("INMOBILIARIAModel.FK_Edificio_Detalle_Edificio", "Edificio_Detalle", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Edificio_Ubicacion_Detalle", "Ubicacion_Detalle")]
        public Ubicacion_Detalle Ubicacion_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Edificio_Ubicacion_Detalle", "Ubicacion_Detalle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Edificio_Ubicacion_Detalle", "Ubicacion_Detalle").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ubicacion_Detalle> Ubicacion_DetalleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Edificio_Ubicacion_Detalle", "Ubicacion_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Edificio_Ubicacion_Detalle", "Ubicacion_Detalle", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Foto_Edificio_Edificio", "Foto_Edificio")]
        public EntityCollection<Foto_Edificio> Foto_Edificio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Foto_Edificio>("INMOBILIARIAModel.FK_Foto_Edificio_Edificio", "Foto_Edificio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Foto_Edificio>("INMOBILIARIAModel.FK_Foto_Edificio_Edificio", "Foto_Edificio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Edificio_Detalle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Edificio_Detalle : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Edificio_Detalle.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Edificio">Valor inicial de la propiedad Id_Edificio.</param>
        /// <param name="foto">Valor inicial de la propiedad Foto.</param>
        public static Edificio_Detalle CreateEdificio_Detalle(global::System.String id, global::System.String id_Edificio, global::System.String foto)
        {
            Edificio_Detalle edificio_Detalle = new Edificio_Detalle();
            edificio_Detalle.Id = id;
            edificio_Detalle.Id_Edificio = id_Edificio;
            edificio_Detalle.Foto = foto;
            return edificio_Detalle;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Edificio
        {
            get
            {
                return _Id_Edificio;
            }
            set
            {
                OnId_EdificioChanging(value);
                ReportPropertyChanging("Id_Edificio");
                _Id_Edificio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Edificio");
                OnId_EdificioChanged();
            }
        }
        private global::System.String _Id_Edificio;
        partial void OnId_EdificioChanging(global::System.String value);
        partial void OnId_EdificioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Foto
        {
            get
            {
                return _Foto;
            }
            set
            {
                OnFotoChanging(value);
                ReportPropertyChanging("Foto");
                _Foto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Foto");
                OnFotoChanged();
            }
        }
        private global::System.String _Foto;
        partial void OnFotoChanging(global::System.String value);
        partial void OnFotoChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Edificio_Detalle_Edificio", "Edificio")]
        public Edificio Edificio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Edificio_Detalle_Edificio", "Edificio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Edificio_Detalle_Edificio", "Edificio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Edificio> EdificioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Edificio_Detalle_Edificio", "Edificio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Edificio>("INMOBILIARIAModel.FK_Edificio_Detalle_Edificio", "Edificio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Foto_Casa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Foto_Casa : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Foto_Casa.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Casa">Valor inicial de la propiedad Id_Casa.</param>
        /// <param name="id_Infrac_Detalle">Valor inicial de la propiedad Id_Infrac_Detalle.</param>
        /// <param name="foto">Valor inicial de la propiedad Foto.</param>
        public static Foto_Casa CreateFoto_Casa(global::System.String id, global::System.String id_Casa, global::System.String id_Infrac_Detalle, global::System.String foto)
        {
            Foto_Casa foto_Casa = new Foto_Casa();
            foto_Casa.Id = id;
            foto_Casa.Id_Casa = id_Casa;
            foto_Casa.Id_Infrac_Detalle = id_Infrac_Detalle;
            foto_Casa.Foto = foto;
            return foto_Casa;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Casa
        {
            get
            {
                return _Id_Casa;
            }
            set
            {
                OnId_CasaChanging(value);
                ReportPropertyChanging("Id_Casa");
                _Id_Casa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Casa");
                OnId_CasaChanged();
            }
        }
        private global::System.String _Id_Casa;
        partial void OnId_CasaChanging(global::System.String value);
        partial void OnId_CasaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Infrac_Detalle
        {
            get
            {
                return _Id_Infrac_Detalle;
            }
            set
            {
                OnId_Infrac_DetalleChanging(value);
                ReportPropertyChanging("Id_Infrac_Detalle");
                _Id_Infrac_Detalle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Infrac_Detalle");
                OnId_Infrac_DetalleChanged();
            }
        }
        private global::System.String _Id_Infrac_Detalle;
        partial void OnId_Infrac_DetalleChanging(global::System.String value);
        partial void OnId_Infrac_DetalleChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Foto
        {
            get
            {
                return _Foto;
            }
            set
            {
                OnFotoChanging(value);
                ReportPropertyChanging("Foto");
                _Foto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Foto");
                OnFotoChanged();
            }
        }
        private global::System.String _Foto;
        partial void OnFotoChanging(global::System.String value);
        partial void OnFotoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            set
            {
                OnDescripcionChanging(value);
                ReportPropertyChanging("Descripcion");
                _Descripcion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descripcion");
                OnDescripcionChanged();
            }
        }
        private global::System.String _Descripcion;
        partial void OnDescripcionChanging(global::System.String value);
        partial void OnDescripcionChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Foto_Casa_Ubicacion_Detalle", "Ubicacion_Detalle")]
        public Ubicacion_Detalle Ubicacion_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Foto_Casa_Ubicacion_Detalle", "Ubicacion_Detalle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Foto_Casa_Ubicacion_Detalle", "Ubicacion_Detalle").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ubicacion_Detalle> Ubicacion_DetalleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Foto_Casa_Ubicacion_Detalle", "Ubicacion_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Foto_Casa_Ubicacion_Detalle", "Ubicacion_Detalle", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Foto_Casa_Casa", "Casa")]
        public Casa Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Foto_Casa_Casa", "Casa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Foto_Casa_Casa", "Casa").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Casa> CasaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Foto_Casa_Casa", "Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Casa>("INMOBILIARIAModel.FK_Foto_Casa_Casa", "Casa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Foto_Edificio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Foto_Edificio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Foto_Edificio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Edificio">Valor inicial de la propiedad Id_Edificio.</param>
        /// <param name="foto">Valor inicial de la propiedad Foto.</param>
        public static Foto_Edificio CreateFoto_Edificio(global::System.String id, global::System.String id_Edificio, global::System.String foto)
        {
            Foto_Edificio foto_Edificio = new Foto_Edificio();
            foto_Edificio.Id = id;
            foto_Edificio.Id_Edificio = id_Edificio;
            foto_Edificio.Foto = foto;
            return foto_Edificio;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Edificio
        {
            get
            {
                return _Id_Edificio;
            }
            set
            {
                OnId_EdificioChanging(value);
                ReportPropertyChanging("Id_Edificio");
                _Id_Edificio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Edificio");
                OnId_EdificioChanged();
            }
        }
        private global::System.String _Id_Edificio;
        partial void OnId_EdificioChanging(global::System.String value);
        partial void OnId_EdificioChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Foto
        {
            get
            {
                return _Foto;
            }
            set
            {
                OnFotoChanging(value);
                ReportPropertyChanging("Foto");
                _Foto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Foto");
                OnFotoChanged();
            }
        }
        private global::System.String _Foto;
        partial void OnFotoChanging(global::System.String value);
        partial void OnFotoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            set
            {
                OnDescripcionChanging(value);
                ReportPropertyChanging("Descripcion");
                _Descripcion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descripcion");
                OnDescripcionChanged();
            }
        }
        private global::System.String _Descripcion;
        partial void OnDescripcionChanging(global::System.String value);
        partial void OnDescripcionChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Foto_Edificio_Edificio", "Edificio")]
        public Edificio Edificio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Foto_Edificio_Edificio", "Edificio").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Foto_Edificio_Edificio", "Edificio").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Edificio> EdificioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Edificio>("INMOBILIARIAModel.FK_Foto_Edificio_Edificio", "Edificio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Edificio>("INMOBILIARIAModel.FK_Foto_Edificio_Edificio", "Edificio", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Fotos_Apartamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fotos_Apartamento : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Fotos_Apartamento.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="foto">Valor inicial de la propiedad Foto.</param>
        /// <param name="id_Infra_Detalle">Valor inicial de la propiedad Id_Infra_Detalle.</param>
        /// <param name="id_Apartamento">Valor inicial de la propiedad Id_Apartamento.</param>
        public static Fotos_Apartamento CreateFotos_Apartamento(global::System.String id, global::System.String foto, global::System.String id_Infra_Detalle, global::System.String id_Apartamento)
        {
            Fotos_Apartamento fotos_Apartamento = new Fotos_Apartamento();
            fotos_Apartamento.Id = id;
            fotos_Apartamento.Foto = foto;
            fotos_Apartamento.Id_Infra_Detalle = id_Infra_Detalle;
            fotos_Apartamento.Id_Apartamento = id_Apartamento;
            return fotos_Apartamento;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Foto
        {
            get
            {
                return _Foto;
            }
            set
            {
                OnFotoChanging(value);
                ReportPropertyChanging("Foto");
                _Foto = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Foto");
                OnFotoChanged();
            }
        }
        private global::System.String _Foto;
        partial void OnFotoChanging(global::System.String value);
        partial void OnFotoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Infra_Detalle
        {
            get
            {
                return _Id_Infra_Detalle;
            }
            set
            {
                OnId_Infra_DetalleChanging(value);
                ReportPropertyChanging("Id_Infra_Detalle");
                _Id_Infra_Detalle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Infra_Detalle");
                OnId_Infra_DetalleChanged();
            }
        }
        private global::System.String _Id_Infra_Detalle;
        partial void OnId_Infra_DetalleChanging(global::System.String value);
        partial void OnId_Infra_DetalleChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Apartamento
        {
            get
            {
                return _Id_Apartamento;
            }
            set
            {
                OnId_ApartamentoChanging(value);
                ReportPropertyChanging("Id_Apartamento");
                _Id_Apartamento = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Apartamento");
                OnId_ApartamentoChanged();
            }
        }
        private global::System.String _Id_Apartamento;
        partial void OnId_ApartamentoChanging(global::System.String value);
        partial void OnId_ApartamentoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            set
            {
                OnDescripcionChanging(value);
                ReportPropertyChanging("Descripcion");
                _Descripcion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descripcion");
                OnDescripcionChanged();
            }
        }
        private global::System.String _Descripcion;
        partial void OnDescripcionChanging(global::System.String value);
        partial void OnDescripcionChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Fotos_Apartamento_Apartamento", "Apartamento")]
        public Apartamento Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Apartamento", "Apartamento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Apartamento", "Apartamento").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Apartamento> ApartamentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Apartamento", "Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Apartamento", "Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Fotos_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle")]
        public Infraestructura_Detalle Infraestructura_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Fotos_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Fotos_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Infraestructura_Detalle> Infraestructura_DetalleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Fotos_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Fotos_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Infraestructura")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Infraestructura : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Infraestructura.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        public static Infraestructura CreateInfraestructura(global::System.String id, global::System.String nombre)
        {
            Infraestructura infraestructura = new Infraestructura();
            infraestructura.Id = id;
            infraestructura.Nombre = nombre;
            return infraestructura;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Detalle_Infraestructura", "Infraestructura_Detalle")]
        public EntityCollection<Infraestructura_Detalle> Infraestructura_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Detalle_Infraestructura", "Infraestructura_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Detalle_Infraestructura", "Infraestructura_Detalle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Infraestructura_Apartamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Infraestructura_Apartamento : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Infraestructura_Apartamento.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Apartamento">Valor inicial de la propiedad Id_Apartamento.</param>
        /// <param name="id_Infrac_Detalle">Valor inicial de la propiedad Id_Infrac_Detalle.</param>
        public static Infraestructura_Apartamento CreateInfraestructura_Apartamento(global::System.String id, global::System.String id_Apartamento, global::System.String id_Infrac_Detalle)
        {
            Infraestructura_Apartamento infraestructura_Apartamento = new Infraestructura_Apartamento();
            infraestructura_Apartamento.Id = id;
            infraestructura_Apartamento.Id_Apartamento = id_Apartamento;
            infraestructura_Apartamento.Id_Infrac_Detalle = id_Infrac_Detalle;
            return infraestructura_Apartamento;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Apartamento
        {
            get
            {
                return _Id_Apartamento;
            }
            set
            {
                OnId_ApartamentoChanging(value);
                ReportPropertyChanging("Id_Apartamento");
                _Id_Apartamento = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Apartamento");
                OnId_ApartamentoChanged();
            }
        }
        private global::System.String _Id_Apartamento;
        partial void OnId_ApartamentoChanging(global::System.String value);
        partial void OnId_ApartamentoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Infrac_Detalle
        {
            get
            {
                return _Id_Infrac_Detalle;
            }
            set
            {
                OnId_Infrac_DetalleChanging(value);
                ReportPropertyChanging("Id_Infrac_Detalle");
                _Id_Infrac_Detalle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Infrac_Detalle");
                OnId_Infrac_DetalleChanged();
            }
        }
        private global::System.String _Id_Infrac_Detalle;
        partial void OnId_Infrac_DetalleChanging(global::System.String value);
        partial void OnId_Infrac_DetalleChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Cantidad
        {
            get
            {
                return _Cantidad;
            }
            set
            {
                OnCantidadChanging(value);
                ReportPropertyChanging("Cantidad");
                _Cantidad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cantidad");
                OnCantidadChanged();
            }
        }
        private Nullable<global::System.Int32> _Cantidad;
        partial void OnCantidadChanging(Nullable<global::System.Int32> value);
        partial void OnCantidadChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Apartamento_Apartamento", "Apartamento")]
        public Apartamento Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Apartamento", "Apartamento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Apartamento", "Apartamento").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Apartamento> ApartamentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Apartamento", "Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Apartamento", "Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle")]
        public Infraestructura_Detalle Infraestructura_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Infraestructura_Detalle> Infraestructura_DetalleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Detalle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Infraestructura_Casa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Infraestructura_Casa : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Infraestructura_Casa.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_casa">Valor inicial de la propiedad Id_casa.</param>
        /// <param name="id_Infrac_Detalle">Valor inicial de la propiedad Id_Infrac_Detalle.</param>
        public static Infraestructura_Casa CreateInfraestructura_Casa(global::System.String id, global::System.String id_casa, global::System.String id_Infrac_Detalle)
        {
            Infraestructura_Casa infraestructura_Casa = new Infraestructura_Casa();
            infraestructura_Casa.Id = id;
            infraestructura_Casa.Id_casa = id_casa;
            infraestructura_Casa.Id_Infrac_Detalle = id_Infrac_Detalle;
            return infraestructura_Casa;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_casa
        {
            get
            {
                return _Id_casa;
            }
            set
            {
                OnId_casaChanging(value);
                ReportPropertyChanging("Id_casa");
                _Id_casa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_casa");
                OnId_casaChanged();
            }
        }
        private global::System.String _Id_casa;
        partial void OnId_casaChanging(global::System.String value);
        partial void OnId_casaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Infrac_Detalle
        {
            get
            {
                return _Id_Infrac_Detalle;
            }
            set
            {
                OnId_Infrac_DetalleChanging(value);
                ReportPropertyChanging("Id_Infrac_Detalle");
                _Id_Infrac_Detalle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Infrac_Detalle");
                OnId_Infrac_DetalleChanged();
            }
        }
        private global::System.String _Id_Infrac_Detalle;
        partial void OnId_Infrac_DetalleChanging(global::System.String value);
        partial void OnId_Infrac_DetalleChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Cantidad
        {
            get
            {
                return _Cantidad;
            }
            set
            {
                OnCantidadChanging(value);
                ReportPropertyChanging("Cantidad");
                _Cantidad = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Cantidad");
                OnCantidadChanged();
            }
        }
        private global::System.String _Cantidad;
        partial void OnCantidadChanging(global::System.String value);
        partial void OnCantidadChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Detalle")]
        public Infraestructura_Detalle Infraestructura_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Detalle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Detalle").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Infraestructura_Detalle> Infraestructura_DetalleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Infraestructura_Detalle>("INMOBILIARIAModel.FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Detalle", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Casa_Casa", "Casa")]
        public Casa Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Casa", "Casa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Casa", "Casa").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Casa> CasaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Casa", "Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Casa", "Casa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Infraestructura_Detalle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Infraestructura_Detalle : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Infraestructura_Detalle.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Infra">Valor inicial de la propiedad Id_Infra.</param>
        /// <param name="tamano">Valor inicial de la propiedad Tamano.</param>
        /// <param name="descripcion">Valor inicial de la propiedad Descripcion.</param>
        public static Infraestructura_Detalle CreateInfraestructura_Detalle(global::System.String id, global::System.String id_Infra, global::System.String tamano, global::System.String descripcion)
        {
            Infraestructura_Detalle infraestructura_Detalle = new Infraestructura_Detalle();
            infraestructura_Detalle.Id = id;
            infraestructura_Detalle.Id_Infra = id_Infra;
            infraestructura_Detalle.Tamano = tamano;
            infraestructura_Detalle.Descripcion = descripcion;
            return infraestructura_Detalle;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Infra
        {
            get
            {
                return _Id_Infra;
            }
            set
            {
                OnId_InfraChanging(value);
                ReportPropertyChanging("Id_Infra");
                _Id_Infra = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Infra");
                OnId_InfraChanged();
            }
        }
        private global::System.String _Id_Infra;
        partial void OnId_InfraChanging(global::System.String value);
        partial void OnId_InfraChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tamano
        {
            get
            {
                return _Tamano;
            }
            set
            {
                OnTamanoChanging(value);
                ReportPropertyChanging("Tamano");
                _Tamano = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tamano");
                OnTamanoChanged();
            }
        }
        private global::System.String _Tamano;
        partial void OnTamanoChanging(global::System.String value);
        partial void OnTamanoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            set
            {
                OnDescripcionChanging(value);
                ReportPropertyChanging("Descripcion");
                _Descripcion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descripcion");
                OnDescripcionChanged();
            }
        }
        private global::System.String _Descripcion;
        partial void OnDescripcionChanging(global::System.String value);
        partial void OnDescripcionChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Fotos_Apartamento_Infraestructura_Detalle", "Fotos_Apartamento")]
        public EntityCollection<Fotos_Apartamento> Fotos_Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Fotos_Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Infraestructura_Detalle", "Fotos_Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Fotos_Apartamento>("INMOBILIARIAModel.FK_Fotos_Apartamento_Infraestructura_Detalle", "Fotos_Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Detalle_Infraestructura", "Infraestructura")]
        public Infraestructura Infraestructura
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura>("INMOBILIARIAModel.FK_Infraestructura_Detalle_Infraestructura", "Infraestructura").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura>("INMOBILIARIAModel.FK_Infraestructura_Detalle_Infraestructura", "Infraestructura").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Infraestructura> InfraestructuraReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Infraestructura>("INMOBILIARIAModel.FK_Infraestructura_Detalle_Infraestructura", "Infraestructura");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Infraestructura>("INMOBILIARIAModel.FK_Infraestructura_Detalle_Infraestructura", "Infraestructura", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Apartamento")]
        public EntityCollection<Infraestructura_Apartamento> Infraestructura_Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Infraestructura_Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Infraestructura_Apartamento>("INMOBILIARIAModel.FK_Infraestructura_Apartamento_Infraestructura_Detalle", "Infraestructura_Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Casa")]
        public EntityCollection<Infraestructura_Casa> Infraestructura_Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Infraestructura_Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Infraestructura_Casa>("INMOBILIARIAModel.FK_Infraestructura_Casa_Infraestructura_Detalle", "Infraestructura_Casa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Servcio_Apartamento")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Servcio_Apartamento : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Servcio_Apartamento.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Apartemento">Valor inicial de la propiedad Id_Apartemento.</param>
        /// <param name="id_Servicio">Valor inicial de la propiedad Id_Servicio.</param>
        public static Servcio_Apartamento CreateServcio_Apartamento(global::System.String id, global::System.String id_Apartemento, global::System.String id_Servicio)
        {
            Servcio_Apartamento servcio_Apartamento = new Servcio_Apartamento();
            servcio_Apartamento.Id = id;
            servcio_Apartamento.Id_Apartemento = id_Apartemento;
            servcio_Apartamento.Id_Servicio = id_Servicio;
            return servcio_Apartamento;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Apartemento
        {
            get
            {
                return _Id_Apartemento;
            }
            set
            {
                OnId_ApartementoChanging(value);
                ReportPropertyChanging("Id_Apartemento");
                _Id_Apartemento = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Apartemento");
                OnId_ApartementoChanged();
            }
        }
        private global::System.String _Id_Apartemento;
        partial void OnId_ApartementoChanging(global::System.String value);
        partial void OnId_ApartementoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Servicio
        {
            get
            {
                return _Id_Servicio;
            }
            set
            {
                OnId_ServicioChanging(value);
                ReportPropertyChanging("Id_Servicio");
                _Id_Servicio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Servicio");
                OnId_ServicioChanged();
            }
        }
        private global::System.String _Id_Servicio;
        partial void OnId_ServicioChanging(global::System.String value);
        partial void OnId_ServicioChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servcio_Apartamento_Apartamento", "Apartamento")]
        public Apartamento Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Apartamento", "Apartamento").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Apartamento", "Apartamento").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Apartamento> ApartamentoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Apartamento", "Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Apartamento", "Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servcio_Apartamento_Servicios", "Servicios")]
        public Servicios Servicios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servcio_Apartamento_Servicios", "Servicios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servcio_Apartamento_Servicios", "Servicios").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Servicios> ServiciosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servcio_Apartamento_Servicios", "Servicios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servcio_Apartamento_Servicios", "Servicios", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Servicio_Casa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Servicio_Casa : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Servicio_Casa.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_casa">Valor inicial de la propiedad Id_casa.</param>
        /// <param name="id_servicio">Valor inicial de la propiedad Id_servicio.</param>
        public static Servicio_Casa CreateServicio_Casa(global::System.String id, global::System.String id_casa, global::System.String id_servicio)
        {
            Servicio_Casa servicio_Casa = new Servicio_Casa();
            servicio_Casa.Id = id;
            servicio_Casa.Id_casa = id_casa;
            servicio_Casa.Id_servicio = id_servicio;
            return servicio_Casa;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_casa
        {
            get
            {
                return _Id_casa;
            }
            set
            {
                OnId_casaChanging(value);
                ReportPropertyChanging("Id_casa");
                _Id_casa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_casa");
                OnId_casaChanged();
            }
        }
        private global::System.String _Id_casa;
        partial void OnId_casaChanging(global::System.String value);
        partial void OnId_casaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_servicio
        {
            get
            {
                return _Id_servicio;
            }
            set
            {
                OnId_servicioChanging(value);
                ReportPropertyChanging("Id_servicio");
                _Id_servicio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_servicio");
                OnId_servicioChanged();
            }
        }
        private global::System.String _Id_servicio;
        partial void OnId_servicioChanging(global::System.String value);
        partial void OnId_servicioChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servicio_Casa_Servicios", "Servicios")]
        public Servicios Servicios
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servicio_Casa_Servicios", "Servicios").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servicio_Casa_Servicios", "Servicios").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Servicios> ServiciosReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servicio_Casa_Servicios", "Servicios");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Servicios>("INMOBILIARIAModel.FK_Servicio_Casa_Servicios", "Servicios", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servicio_Casa_Casa", "Casa")]
        public Casa Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Casa", "Casa").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Casa", "Casa").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Casa> CasaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Casa", "Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Casa", "Casa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Servicios")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Servicios : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Servicios.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="tipo">Valor inicial de la propiedad Tipo.</param>
        public static Servicios CreateServicios(global::System.String id, global::System.String nombre, global::System.String tipo)
        {
            Servicios servicios = new Servicios();
            servicios.Id = id;
            servicios.Nombre = nombre;
            servicios.Tipo = tipo;
            return servicios;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tipo
        {
            get
            {
                return _Tipo;
            }
            set
            {
                OnTipoChanging(value);
                ReportPropertyChanging("Tipo");
                _Tipo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tipo");
                OnTipoChanged();
            }
        }
        private global::System.String _Tipo;
        partial void OnTipoChanging(global::System.String value);
        partial void OnTipoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Descripcion
        {
            get
            {
                return _Descripcion;
            }
            set
            {
                OnDescripcionChanging(value);
                ReportPropertyChanging("Descripcion");
                _Descripcion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Descripcion");
                OnDescripcionChanged();
            }
        }
        private global::System.String _Descripcion;
        partial void OnDescripcionChanging(global::System.String value);
        partial void OnDescripcionChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servcio_Apartamento_Servicios", "Servcio_Apartamento")]
        public EntityCollection<Servcio_Apartamento> Servcio_Apartamento
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servcio_Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Servicios", "Servcio_Apartamento");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servcio_Apartamento>("INMOBILIARIAModel.FK_Servcio_Apartamento_Servicios", "Servcio_Apartamento", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Servicio_Casa_Servicios", "Servicio_Casa")]
        public EntityCollection<Servicio_Casa> Servicio_Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Servicio_Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Servicios", "Servicio_Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Servicio_Casa>("INMOBILIARIAModel.FK_Servicio_Casa_Servicios", "Servicio_Casa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto sysdiagrams.
        /// </summary>
        /// <param name="name">Valor inicial de la propiedad name.</param>
        /// <param name="principal_id">Valor inicial de la propiedad principal_id.</param>
        /// <param name="diagram_id">Valor inicial de la propiedad diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Tipo_Casa")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tipo_Casa : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Tipo_Casa.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        public static Tipo_Casa CreateTipo_Casa(global::System.String id, global::System.String nombre)
        {
            Tipo_Casa tipo_Casa = new Tipo_Casa();
            tipo_Casa.Id = id;
            tipo_Casa.Nombre = nombre;
            return tipo_Casa;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                OnNombreChanging(value);
                ReportPropertyChanging("Nombre");
                _Nombre = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nombre");
                OnNombreChanged();
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Ubicacion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ubicacion : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Ubicacion.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="provincia">Valor inicial de la propiedad Provincia.</param>
        public static Ubicacion CreateUbicacion(global::System.String id, global::System.String provincia)
        {
            Ubicacion ubicacion = new Ubicacion();
            ubicacion.Id = id;
            ubicacion.Provincia = provincia;
            return ubicacion;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                OnProvinciaChanging(value);
                ReportPropertyChanging("Provincia");
                _Provincia = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Provincia");
                OnProvinciaChanged();
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Ubicacion_Detalle_Ubicacion", "Ubicacion_Detalle")]
        public EntityCollection<Ubicacion_Detalle> Ubicacion_Detalle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Ubicacion_Detalle_Ubicacion", "Ubicacion_Detalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ubicacion_Detalle>("INMOBILIARIAModel.FK_Ubicacion_Detalle_Ubicacion", "Ubicacion_Detalle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="Ubicacion_Detalle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ubicacion_Detalle : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto Ubicacion_Detalle.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="id_Ubicacion">Valor inicial de la propiedad Id_Ubicacion.</param>
        /// <param name="zona">Valor inicial de la propiedad Zona.</param>
        /// <param name="direccion">Valor inicial de la propiedad Direccion.</param>
        public static Ubicacion_Detalle CreateUbicacion_Detalle(global::System.String id, global::System.String id_Ubicacion, global::System.String zona, global::System.String direccion)
        {
            Ubicacion_Detalle ubicacion_Detalle = new Ubicacion_Detalle();
            ubicacion_Detalle.Id = id;
            ubicacion_Detalle.Id_Ubicacion = id_Ubicacion;
            ubicacion_Detalle.Zona = zona;
            ubicacion_Detalle.Direccion = direccion;
            return ubicacion_Detalle;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id_Ubicacion
        {
            get
            {
                return _Id_Ubicacion;
            }
            set
            {
                OnId_UbicacionChanging(value);
                ReportPropertyChanging("Id_Ubicacion");
                _Id_Ubicacion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Id_Ubicacion");
                OnId_UbicacionChanged();
            }
        }
        private global::System.String _Id_Ubicacion;
        partial void OnId_UbicacionChanging(global::System.String value);
        partial void OnId_UbicacionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zona
        {
            get
            {
                return _Zona;
            }
            set
            {
                OnZonaChanging(value);
                ReportPropertyChanging("Zona");
                _Zona = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Zona");
                OnZonaChanged();
            }
        }
        private global::System.String _Zona;
        partial void OnZonaChanging(global::System.String value);
        partial void OnZonaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Direccion
        {
            get
            {
                return _Direccion;
            }
            set
            {
                OnDireccionChanging(value);
                ReportPropertyChanging("Direccion");
                _Direccion = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Direccion");
                OnDireccionChanged();
            }
        }
        private global::System.String _Direccion;
        partial void OnDireccionChanging(global::System.String value);
        partial void OnDireccionChanged();

        #endregion

    
        #region Propiedades de navegación
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Edificio_Ubicacion_Detalle", "Edificio")]
        public EntityCollection<Edificio> Edificio
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Edificio>("INMOBILIARIAModel.FK_Edificio_Ubicacion_Detalle", "Edificio");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Edificio>("INMOBILIARIAModel.FK_Edificio_Ubicacion_Detalle", "Edificio", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Ubicacion_Detalle_Ubicacion", "Ubicacion")]
        public Ubicacion Ubicacion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion>("INMOBILIARIAModel.FK_Ubicacion_Detalle_Ubicacion", "Ubicacion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion>("INMOBILIARIAModel.FK_Ubicacion_Detalle_Ubicacion", "Ubicacion").Value = value;
            }
        }
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ubicacion> UbicacionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ubicacion>("INMOBILIARIAModel.FK_Ubicacion_Detalle_Ubicacion", "Ubicacion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ubicacion>("INMOBILIARIAModel.FK_Ubicacion_Detalle_Ubicacion", "Ubicacion", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Foto_Casa_Ubicacion_Detalle", "Foto_Casa")]
        public EntityCollection<Foto_Casa> Foto_Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Foto_Casa>("INMOBILIARIAModel.FK_Foto_Casa_Ubicacion_Detalle", "Foto_Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Foto_Casa>("INMOBILIARIAModel.FK_Foto_Casa_Ubicacion_Detalle", "Foto_Casa", value);
                }
            }
        }
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("INMOBILIARIAModel", "FK_Casa_Ubicacion_Detalle", "Casa")]
        public EntityCollection<Casa> Casa
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Casa>("INMOBILIARIAModel.FK_Casa_Ubicacion_Detalle", "Casa");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Casa>("INMOBILIARIAModel.FK_Casa_Ubicacion_Detalle", "Casa", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No hay documentación de metadatos disponible.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="INMOBILIARIAModel", Name="VistaDetailEdificio")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class VistaDetailEdificio : EntityObject
    {
        #region Método de generador
    
        /// <summary>
        /// Crear un nuevo objeto VistaDetailEdificio.
        /// </summary>
        /// <param name="id">Valor inicial de la propiedad Id.</param>
        /// <param name="nombre">Valor inicial de la propiedad Nombre.</param>
        /// <param name="a_Contruccion">Valor inicial de la propiedad A_Contruccion.</param>
        /// <param name="provincia">Valor inicial de la propiedad Provincia.</param>
        /// <param name="zona">Valor inicial de la propiedad Zona.</param>
        /// <param name="direccion">Valor inicial de la propiedad Direccion.</param>
        public static VistaDetailEdificio CreateVistaDetailEdificio(global::System.String id, global::System.String nombre, global::System.DateTime a_Contruccion, global::System.String provincia, global::System.String zona, global::System.String direccion)
        {
            VistaDetailEdificio vistaDetailEdificio = new VistaDetailEdificio();
            vistaDetailEdificio.Id = id;
            vistaDetailEdificio.Nombre = nombre;
            vistaDetailEdificio.A_Contruccion = a_Contruccion;
            vistaDetailEdificio.Provincia = provincia;
            vistaDetailEdificio.Zona = zona;
            vistaDetailEdificio.Direccion = direccion;
            return vistaDetailEdificio;
        }

        #endregion

        #region Propiedades primitivas
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            set
            {
                if (_Nombre != value)
                {
                    OnNombreChanging(value);
                    ReportPropertyChanging("Nombre");
                    _Nombre = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Nombre");
                    OnNombreChanged();
                }
            }
        }
        private global::System.String _Nombre;
        partial void OnNombreChanging(global::System.String value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime A_Contruccion
        {
            get
            {
                return _A_Contruccion;
            }
            set
            {
                if (_A_Contruccion != value)
                {
                    OnA_ContruccionChanging(value);
                    ReportPropertyChanging("A_Contruccion");
                    _A_Contruccion = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("A_Contruccion");
                    OnA_ContruccionChanged();
                }
            }
        }
        private global::System.DateTime _A_Contruccion;
        partial void OnA_ContruccionChanging(global::System.DateTime value);
        partial void OnA_ContruccionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> N_Plantas
        {
            get
            {
                return _N_Plantas;
            }
            set
            {
                OnN_PlantasChanging(value);
                ReportPropertyChanging("N_Plantas");
                _N_Plantas = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("N_Plantas");
                OnN_PlantasChanged();
            }
        }
        private Nullable<global::System.Int32> _N_Plantas;
        partial void OnN_PlantasChanging(Nullable<global::System.Int32> value);
        partial void OnN_PlantasChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mainFoto
        {
            get
            {
                return _mainFoto;
            }
            set
            {
                OnmainFotoChanging(value);
                ReportPropertyChanging("mainFoto");
                _mainFoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mainFoto");
                OnmainFotoChanged();
            }
        }
        private global::System.String _mainFoto;
        partial void OnmainFotoChanging(global::System.String value);
        partial void OnmainFotoChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Provincia
        {
            get
            {
                return _Provincia;
            }
            set
            {
                if (_Provincia != value)
                {
                    OnProvinciaChanging(value);
                    ReportPropertyChanging("Provincia");
                    _Provincia = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Provincia");
                    OnProvinciaChanged();
                }
            }
        }
        private global::System.String _Provincia;
        partial void OnProvinciaChanging(global::System.String value);
        partial void OnProvinciaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Zona
        {
            get
            {
                return _Zona;
            }
            set
            {
                if (_Zona != value)
                {
                    OnZonaChanging(value);
                    ReportPropertyChanging("Zona");
                    _Zona = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Zona");
                    OnZonaChanged();
                }
            }
        }
        private global::System.String _Zona;
        partial void OnZonaChanging(global::System.String value);
        partial void OnZonaChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Direccion
        {
            get
            {
                return _Direccion;
            }
            set
            {
                if (_Direccion != value)
                {
                    OnDireccionChanging(value);
                    ReportPropertyChanging("Direccion");
                    _Direccion = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Direccion");
                    OnDireccionChanged();
                }
            }
        }
        private global::System.String _Direccion;
        partial void OnDireccionChanging(global::System.String value);
        partial void OnDireccionChanged();
    
        /// <summary>
        /// No hay documentación de metadatos disponible.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Inf_Adicional
        {
            get
            {
                return _Inf_Adicional;
            }
            set
            {
                OnInf_AdicionalChanging(value);
                ReportPropertyChanging("Inf_Adicional");
                _Inf_Adicional = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Inf_Adicional");
                OnInf_AdicionalChanged();
            }
        }
        private global::System.String _Inf_Adicional;
        partial void OnInf_AdicionalChanging(global::System.String value);
        partial void OnInf_AdicionalChanged();

        #endregion

    
    }

    #endregion

    
}
